package com.heaven.blocks;

import java.util.Random;

import net.minecraft.block.Block;
import net.minecraft.block.BlockPortal;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.world.World;

public class HeavenPortal extends BlockPortal {

	public HeavenPortal()
	{
		super();
	}
	//public void updateTick(World world, int x, int y, int z, Random random)
	//{
	//	
	//}
	
	public AxisAlignedBB getCollisionBoundingBoxFromPool(World world, int x, int y, int z)
	{
		return null;
	}
	
	public boolean renderAsNormalBlock()
	{
		return false;
	}
	
	public void onNeighbourBlockChange(World world, int x, int y, int z, Block block)
	{
		byte b0 = 0;
		byte b1 = 1;
		
		if(world.getBlock(x -1, y, z) == BlockHandler.SkyStone || world.getBlock(x + 1, y, z) == BlockHandler.SkyStone)
		{
			b0 = 0;
			b1 = 1;
		}
	
		int i1;
		
		for(i1 = y; world.getBlock(x, i1 - 1, z) == this; --i1)
		{
			
		}
		if(world.getBlock(x, i1 -1, z) != BlockHandler.SkyStone)
		{
			world.setBlockToAir(x, y, z);
		}
		else
		{
			int j1;
			
			for(j1 = 1; j1 < 4 && world.getBlock(x, i1 + j1, z) == this; ++j1)
			{
				
			}
			if(j1 == 3 && world.getBlock(x, i1 + j1, z) == BlockHandler.SkyStone)
			{
				boolean flag = world.getBlock(x - 1, y, z) == this || world.getBlock(x + 1, y, z) == this;
				boolean flag1 = world.getBlock(x, y, z - 1) == this || world.getBlock(x, y, z - 1) == this;
				
				if(flag && flag1)
				{
					world.setBlockToAir(x, y, z);
				}
				else if((world.getBlock(x + b0, y, z + b1) != BlockHandler.SkyStone || world.getBlock(x - b0, y, z - b1) != this) && (world.getBlock(x - b0, y, z - b1) != BlockHandler.HeavenPortal))
				{
					
				}
			}
		}
	}
}
